// <auto-generated />
using System;
using DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Entities
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240709143830_up")]
    partial class up
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Entities.ChiTietDonHang", b =>
                {
                    b.Property<int?>("CuaHang")
                        .HasColumnType("int");

                    b.Property<int?>("MaDh")
                        .HasColumnType("int")
                        .HasColumnName("MaDH");

                    b.Property<int?>("MaKh")
                        .HasColumnType("int")
                        .HasColumnName("MaKH");

                    b.Property<int?>("MaSp")
                        .HasColumnType("int")
                        .HasColumnName("MaSP");

                    b.Property<DateOnly?>("NgayTao")
                        .HasColumnType("date");

                    b.Property<string>("Sdt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("SDT");

                    b.Property<int?>("SoLuongSp")
                        .HasColumnType("int")
                        .HasColumnName("SoLuongSP");

                    b.Property<string>("TenKh")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TenKH");

                    b.Property<string>("TenSp")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TenSP");

                    b.Property<decimal?>("TongGiaTien")
                        .HasColumnType("decimal(10, 2)");

                    b.HasIndex("CuaHang");

                    b.HasIndex("MaDh");

                    b.HasIndex("MaKh");

                    b.HasIndex("MaSp");

                    b.ToTable("ChiTietDonHang", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.ChucVu", b =>
                {
                    b.Property<int>("MaCv")
                        .HasColumnType("int")
                        .HasColumnName("MaCV");

                    b.Property<string>("TenCv")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TenCV");

                    b.HasKey("MaCv")
                        .HasName("PK__ChucVu__27258E76CB839769");

                    b.ToTable("ChucVu", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.CuaHang", b =>
                {
                    b.Property<int>("MaCuaHang")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TenCuaHang")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("MaCuaHang")
                        .HasName("PK__CuaHang__0840BCA6C880D736");

                    b.ToTable("CuaHang", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.DonHang", b =>
                {
                    b.Property<int>("MaDh")
                        .HasColumnType("int")
                        .HasColumnName("MaDH");

                    b.Property<int?>("MaCuaHang")
                        .HasColumnType("int");

                    b.Property<int?>("MaCuaHangNavigationMaCuaHang")
                        .HasColumnType("int");

                    b.Property<int?>("MaKh")
                        .HasColumnType("int")
                        .HasColumnName("MaKH");

                    b.Property<int?>("MaSp")
                        .HasColumnType("int")
                        .HasColumnName("MaSP");

                    b.Property<DateOnly?>("NgayTao")
                        .HasColumnType("date");

                    b.Property<float?>("TongTien")
                        .HasColumnType("real");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDh")
                        .HasName("PK__DonHang__27258661E9C30AA0");

                    b.HasIndex("MaCuaHangNavigationMaCuaHang");

                    b.HasIndex("MaKh");

                    b.HasIndex("MaSp");

                    b.ToTable("DonHang", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.HoaDon", b =>
                {
                    b.Property<int>("MaHd")
                        .HasColumnType("int")
                        .HasColumnName("MaHD");

                    b.Property<float>("DonGia")
                        .HasColumnType("real");

                    b.Property<int?>("MaQl")
                        .HasColumnType("int")
                        .HasColumnName("MaQL");

                    b.Property<int>("MaSp")
                        .HasColumnType("int");

                    b.Property<int?>("MaSpNavigationMaSp")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("NgayBan")
                        .HasColumnType("date");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TongTien")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("MaHd")
                        .HasName("PK__HoaDon__2725A6E008FED14D");

                    b.HasIndex("MaQl");

                    b.HasIndex("MaSpNavigationMaSp");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.KhachHang", b =>
                {
                    b.Property<int>("MaKh")
                        .HasColumnType("int")
                        .HasColumnName("MaKH");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Sdt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("SDT");

                    b.Property<string>("TenKh")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TenKH");

                    b.HasKey("MaKh")
                        .HasName("PK__KhachHan__2725CF1E9E12D26C");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.NguoiDung", b =>
                {
                    b.Property<string>("TenDangNhap")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("HoTen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MatKhau")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sdt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("SDT");

                    b.HasKey("TenDangNhap")
                        .HasName("PK__NguoiDun__55F68FC1745B5175");

                    b.ToTable("NguoiDung", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.NhaCungCap", b =>
                {
                    b.Property<int>("MaNcc")
                        .HasColumnType("int")
                        .HasColumnName("MaNCC");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Sdt")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("TenNcc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TenNCC");

                    b.HasKey("MaNcc")
                        .HasName("PK__NhaCungC__3A185DEB39898FA7");

                    b.ToTable("NhaCungCap", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.PhieuNhap", b =>
                {
                    b.Property<int>("MaPn")
                        .HasColumnType("int")
                        .HasColumnName("MaPN");

                    b.Property<int?>("MaCuaHang")
                        .HasColumnType("int");

                    b.Property<int?>("MaCuaHangNavigationMaCuaHang")
                        .HasColumnType("int");

                    b.Property<int?>("MaNcc")
                        .HasColumnType("int")
                        .HasColumnName("MaNCC");

                    b.Property<int?>("MaQl")
                        .HasColumnType("int")
                        .HasColumnName("MaQL");

                    b.Property<int>("MaSp")
                        .HasColumnType("int");

                    b.Property<int?>("MaSpNavigationMaSp")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("NgayNhap")
                        .HasColumnType("date");

                    b.Property<int?>("SdtNcc")
                        .HasColumnType("int");

                    b.Property<decimal?>("TongTienHang")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("MaPn")
                        .HasName("PK__PhieuNha__2725E7F0A1544A75");

                    b.HasIndex("MaCuaHangNavigationMaCuaHang");

                    b.HasIndex("MaNcc");

                    b.HasIndex("MaQl");

                    b.HasIndex("MaSpNavigationMaSp");

                    b.ToTable("PhieuNhap", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.PhieuXuat", b =>
                {
                    b.Property<int>("MaPx")
                        .HasColumnType("int")
                        .HasColumnName("MaPX");

                    b.Property<int>("MaCuaHang")
                        .HasColumnType("int");

                    b.Property<int?>("MaCuaHangNavigationMaCuaHang")
                        .HasColumnType("int");

                    b.Property<int?>("MaNVNavigationMaSale")
                        .HasColumnType("int");

                    b.Property<int?>("MaQl")
                        .HasColumnType("int")
                        .HasColumnName("MaQL");

                    b.Property<int?>("MaSPNavigationMaSp")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("NgayXuat")
                        .HasColumnType("date");

                    b.Property<string>("TenSP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPx")
                        .HasName("PK__PhieuXua__2725E7CA7610C990");

                    b.HasIndex("MaCuaHangNavigationMaCuaHang");

                    b.HasIndex("MaNVNavigationMaSale");

                    b.HasIndex("MaQl");

                    b.HasIndex("MaSPNavigationMaSp");

                    b.ToTable("PhieuXuat", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.QuanLy", b =>
                {
                    b.Property<int>("MaQl")
                        .HasColumnType("int")
                        .HasColumnName("MaQL");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int?>("MaCv")
                        .HasColumnType("int")
                        .HasColumnName("MaCV");

                    b.Property<DateOnly?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("Sdt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("SDT");

                    b.Property<string>("TenQl")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TenQL");

                    b.HasKey("MaQl")
                        .HasName("PK__QuanLy__2725F8529CFD4029");

                    b.HasIndex("MaCv");

                    b.ToTable("QuanLy", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.Sale", b =>
                {
                    b.Property<int>("MaSale")
                        .HasColumnType("int");

                    b.Property<int?>("ChucVu")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaCV")
                        .HasColumnType("int");

                    b.Property<int?>("MaCuaHang")
                        .HasColumnType("int");

                    b.Property<int?>("MaQl")
                        .HasColumnType("int")
                        .HasColumnName("MaQL");

                    b.Property<DateOnly?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("Sdt")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("SDT");

                    b.Property<int?>("Sl")
                        .HasColumnType("int")
                        .HasColumnName("SL");

                    b.Property<string>("TenDangNhap")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TenSale")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("MaSale")
                        .HasName("PK__Sale__B234B7A748EE0427");

                    b.HasIndex("MaCV");

                    b.HasIndex("MaCuaHang");

                    b.HasIndex("MaQl");

                    b.HasIndex("TenDangNhap");

                    b.ToTable("Sale", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.SanPham", b =>
                {
                    b.Property<int>("MaSp")
                        .HasColumnType("int")
                        .HasColumnName("MaSP");

                    b.Property<decimal?>("GiaSp")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("GiaSP");

                    b.Property<DateOnly?>("Hsd")
                        .HasColumnType("date")
                        .HasColumnName("HSD");

                    b.Property<DateOnly?>("Nsx")
                        .HasColumnType("date")
                        .HasColumnName("NSX");

                    b.Property<string>("PhanLoaiSp")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PhanLoaiSP");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSp")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TenSP");

                    b.HasKey("MaSp")
                        .HasName("PK__SanPham__2725081C391B8501");

                    b.ToTable("SanPham", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.ChiTietDonHang", b =>
                {
                    b.HasOne("DataAccess.Entities.CuaHang", "CuaHangNavigation")
                        .WithMany()
                        .HasForeignKey("CuaHang")
                        .HasConstraintName("FK__ChiTietDo__CuaHa__5FB337D6");

                    b.HasOne("DataAccess.Entities.DonHang", "MaDhNavigation")
                        .WithMany()
                        .HasForeignKey("MaDh")
                        .HasConstraintName("FK__ChiTietDon__MaDH__5EBF139D");

                    b.HasOne("DataAccess.Entities.KhachHang", "MaKhNavigation")
                        .WithMany()
                        .HasForeignKey("MaKh")
                        .HasConstraintName("FK__ChiTietDon__MaKH__60A75C0F");

                    b.HasOne("DataAccess.Entities.SanPham", "MaSpNavigation")
                        .WithMany()
                        .HasForeignKey("MaSp")
                        .HasConstraintName("FK__ChiTietDon__MaSP__619B8048");

                    b.Navigation("CuaHangNavigation");

                    b.Navigation("MaDhNavigation");

                    b.Navigation("MaKhNavigation");

                    b.Navigation("MaSpNavigation");
                });

            modelBuilder.Entity("DataAccess.Entities.DonHang", b =>
                {
                    b.HasOne("DataAccess.Entities.CuaHang", "MaCuaHangNavigation")
                        .WithMany()
                        .HasForeignKey("MaCuaHangNavigationMaCuaHang");

                    b.HasOne("DataAccess.Entities.KhachHang", "MaKhNavigation")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaKh")
                        .HasConstraintName("FK__DonHang__MaKH__5CD6CB2B");

                    b.HasOne("DataAccess.Entities.SanPham", "MaSpNavigation")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaSp")
                        .HasConstraintName("FK__DonHang__MaSP__5BE2A6F2");

                    b.Navigation("MaCuaHangNavigation");

                    b.Navigation("MaKhNavigation");

                    b.Navigation("MaSpNavigation");
                });

            modelBuilder.Entity("DataAccess.Entities.HoaDon", b =>
                {
                    b.HasOne("DataAccess.Entities.QuanLy", "MaQlNavigation")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaQl")
                        .HasConstraintName("FK__HoaDon__MaQL__6477ECF3");

                    b.HasOne("DataAccess.Entities.SanPham", "MaSpNavigation")
                        .WithMany()
                        .HasForeignKey("MaSpNavigationMaSp");

                    b.Navigation("MaQlNavigation");

                    b.Navigation("MaSpNavigation");
                });

            modelBuilder.Entity("DataAccess.Entities.PhieuNhap", b =>
                {
                    b.HasOne("DataAccess.Entities.CuaHang", "MaCuaHangNavigation")
                        .WithMany()
                        .HasForeignKey("MaCuaHangNavigationMaCuaHang");

                    b.HasOne("DataAccess.Entities.NhaCungCap", "MaNccNavigation")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("MaNcc")
                        .HasConstraintName("FK__PhieuNhap__MaNCC__693CA210");

                    b.HasOne("DataAccess.Entities.QuanLy", "MaQlNavigation")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("MaQl")
                        .HasConstraintName("FK__PhieuNhap__MaQL__6A30C649");

                    b.HasOne("DataAccess.Entities.SanPham", "MaSpNavigation")
                        .WithMany()
                        .HasForeignKey("MaSpNavigationMaSp");

                    b.Navigation("MaCuaHangNavigation");

                    b.Navigation("MaNccNavigation");

                    b.Navigation("MaQlNavigation");

                    b.Navigation("MaSpNavigation");
                });

            modelBuilder.Entity("DataAccess.Entities.PhieuXuat", b =>
                {
                    b.HasOne("DataAccess.Entities.CuaHang", "MaCuaHangNavigation")
                        .WithMany()
                        .HasForeignKey("MaCuaHangNavigationMaCuaHang");

                    b.HasOne("DataAccess.Entities.Sale", "MaNVNavigation")
                        .WithMany()
                        .HasForeignKey("MaNVNavigationMaSale");

                    b.HasOne("DataAccess.Entities.QuanLy", "MaQlNavigation")
                        .WithMany("PhieuXuats")
                        .HasForeignKey("MaQl")
                        .HasConstraintName("FK__PhieuXuat__MaQL__6D0D32F4");

                    b.HasOne("DataAccess.Entities.SanPham", "MaSPNavigation")
                        .WithMany()
                        .HasForeignKey("MaSPNavigationMaSp");

                    b.Navigation("MaCuaHangNavigation");

                    b.Navigation("MaNVNavigation");

                    b.Navigation("MaQlNavigation");

                    b.Navigation("MaSPNavigation");
                });

            modelBuilder.Entity("DataAccess.Entities.QuanLy", b =>
                {
                    b.HasOne("DataAccess.Entities.ChucVu", "MaCvNavigation")
                        .WithMany("QuanLies")
                        .HasForeignKey("MaCv")
                        .HasConstraintName("FK__QuanLy__MaCV__4F7CD00D");

                    b.Navigation("MaCvNavigation");
                });

            modelBuilder.Entity("DataAccess.Entities.Sale", b =>
                {
                    b.HasOne("DataAccess.Entities.ChucVu", "ChucVuNavigation")
                        .WithMany("Sales")
                        .HasForeignKey("MaCV")
                        .HasConstraintName("FK__Sale__ChucVu__52593CB8");

                    b.HasOne("DataAccess.Entities.CuaHang", "CuaHangNavigation")
                        .WithMany("Sales")
                        .HasForeignKey("MaCuaHang")
                        .HasConstraintName("FK__Sale__CuaHang__534D60F1");

                    b.HasOne("DataAccess.Entities.QuanLy", "MaQlNavigation")
                        .WithMany("Sales")
                        .HasForeignKey("MaQl")
                        .HasConstraintName("FK__Sale__MaQL__5441852A");

                    b.HasOne("DataAccess.Entities.NguoiDung", "TenDangNhapNavigation")
                        .WithMany("Sales")
                        .HasForeignKey("TenDangNhap")
                        .HasConstraintName("FK__Sale__TenDangNha__5535A963");

                    b.Navigation("ChucVuNavigation");

                    b.Navigation("CuaHangNavigation");

                    b.Navigation("MaQlNavigation");

                    b.Navigation("TenDangNhapNavigation");
                });

            modelBuilder.Entity("DataAccess.Entities.ChucVu", b =>
                {
                    b.Navigation("QuanLies");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("DataAccess.Entities.CuaHang", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("DataAccess.Entities.KhachHang", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("DataAccess.Entities.NguoiDung", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("DataAccess.Entities.NhaCungCap", b =>
                {
                    b.Navigation("PhieuNhaps");
                });

            modelBuilder.Entity("DataAccess.Entities.QuanLy", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("PhieuNhaps");

                    b.Navigation("PhieuXuats");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("DataAccess.Entities.SanPham", b =>
                {
                    b.Navigation("DonHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
